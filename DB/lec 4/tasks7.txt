1. Character Functions – Part 3 (TRIM, LTRIM, RTRIM)
Create a table customers with a full_name column. Insert names with extra spaces at the beginning and/or end.

Write a query to remove both leading and trailing spaces from the names using TRIM.

Display only the names with leading spaces removed using LTRIM.

Display only the names with trailing spaces removed using RTRIM.

Trim specific characters (e.g., $, *, or #) from both sides of a given string.

the answer ::

CREATE TABLE customers (
    customer_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    full_name   VARCHAR2(100)
);

INSERT INTO customers (full_name) VALUES ('   Ali Hassan   ');
INSERT INTO customers (full_name) VALUES ('   Sara   ');
INSERT INTO customers (full_name) VALUES ('Omar   ');
INSERT INTO customers (full_name) VALUES ('   Nour');
INSERT INTO customers (full_name) VALUES ('   Mona Ali   ');

SELECT TRIM(full_name) FROM customers;

SELECT LTRIM(full_name) FROM customers;

SELECT RTRIM(full_name) FROM customers;

SELECT TRIM(BOTH '$' FROM '$$$$nourali$$') FROM dual;




----------------------
2. Character Functions – Part 4 (REPLACE, LPAD, RPAD)
Replace all occurrences of the letter 'o' with '0' in the word “promotion”.

SELECT REPLACE('promotion ' , 'o' ,'0' )FROM dual;
////////////////////////////////////////////////////////////////////////////////////

Replace the word “basic” with “advanced” in the sentence “This is a basic course”.

SELECT REPLACE('This is a basic course ' , 'basic' ,'advanced' )FROM dual;
////////////////////////////////////////////////////////////////////////////////////

Create a departments table with dept_name column. Insert at least 3 department names.

Format each department name to 15 characters by padding with ‘*’ on the left using LPAD.

Format each department name to 15 characters by padding with ‘-’ on the right using RPAD.



CREATE TABLE departments_2 (
    dept_id   NUMBER GENERATED BY DEFAULT AS IDENTITY,
    dept_name VARCHAR2(50)
);

INSERT INTO departments_2 (dept_name) VALUES ('Human Resources');
INSERT INTO departments_2 (dept_name) VALUES ('Information Technology');
INSERT INTO departments_2 (dept_name) VALUES ('Finance');

SELECT LPAD(dept_name,15,'*') FROM departments_2;

SELECT LPAD(dept_name,15,'_') FROM departments_2;
//////////////////////////////////////////////////////////////////////////////

--------------------------------
3. TO_CHAR Function

Display the current date in the format DD-MON-YYYY.

SELECT TO_CHAR(SYSDATE , 'DD-MON-YYYY')FROM dual;
////////////////////////////////////////////////////////////////////

Display the current date in the format Day, Month YYYY.

SELECT TO_CHAR(sysdate , 'Day, Month YYYY') FROM dual;
////////////////////////////////////////////////////////////////////////

Convert a number to a formatted string with commas and two decimal places using TO_CHAR.

SELECT TO_CHAR(123459.7, '9,999,999.99') FROM dual;
//////////////////////////////////////////////////////////////////////

Format an employee’s salary to include a currency symbol using TO_CHAR.

SELECT salary , TO_CHAR(salary, '$99,999.99') AS formated_salary FROM EMPLOYEES ;
/////////////////////////////////////////////////////////////////////////////

Display system date in the format: YYYY/MM/DD HH24:MI:SS.

SELECT TO_CHAR(sysdate , 'YYYY/MM/DD HH24:MI:SS' ) FROM dual;
////////////////////////////////////////////////////////////////////
----------------------------------------
4. Oracle Conditional Expressions – CASE Expressions
Create a students table with name and score columns. Insert at least 5 records.

Write a query using CASE to assign grades based on the score:

90 and above: A

80–89: B

70–79: C

Below 70: F

Modify the query to display “Pass” if score is 60 or more, otherwise “Fail”.

Use CASE to display a message for each student:

"Excellent" for A, "Good" for B, "Average" for C, and "Needs Improvement" for F.

Write a CASE expression using system date to return the name of the day (e.g., “Today is Monday”).
------------------------------
5. Oracle Conditional Expressions – DECODE Function
Use DECODE to return grade letters ('A', 'B', 'C', 'F') based on specific score values (e.g., 100 = A, 90 = B, etc.).

SELECT name,
       marks,
       DECODE(marks,
              100, 'A',
              90,  'B',
              80,  'C',
              70,  'D',
              'F') AS grade
FROM students;


Create a status_log table with a status_code column containing values like ‘N’, ‘I’, ‘C’.

Use DECODE to convert:

‘N’ → ‘New’

‘I’ → ‘In Progress’

‘C’ → ‘Completed’

Use DECODE to check if a product’s quantity is 0, and display “Out of Stock”, otherwise “Available”.

Write a query using DECODE to display a bonus:

If department is ‘HR’ → 500

If department is ‘IT’ → 1000

If department is ‘Sales’ → 1500

Else → 300

